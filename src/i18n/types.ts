export interface Translation {
  navigation: {
    dashboard: string;
    userManagement: string;
    emailConfiguration: string;
    userSearch: string;
    settings: string;
    myProjects: string;
    students: string;
    myStudents: string;
    reviews: string;
    myProject: string;
    tasks: string;
    documents: string;
    projects: string;
    proposals: string;
    interns: string;
    projectValidation: string;
  };
  login: {
    title: string;
    emailLabel: string;
    emailPlaceholder: string;
    passwordLabel: string;
    passwordPlaceholder: string;
    signIn: string;
    signingIn: string;
    demoAccounts: string;
    demoPassword: string;
    adminDemo: string;
    teacherDemo: string;
    responsibleTeacherDemo: string;
    studentDemo: string;
    companyDemo: string;
  };
  profile: {
    profileSettings: string;
    firstName: string;
    lastName: string;
    email: string;
    cancel: string;
    saveChanges: string;
    editProfile: string;
    changePassword: string;
    currentPassword: string;
    newPassword: string;
    confirmPassword: string;
    updatePassword: string;
    passwordsNotMatch: string;
    imageSizeError: string;
    imageTypeError: string;
    language: string;
    english: string;
    french: string;
    passwordMinLength: string;
    passwordMustDiffer: string;
    passwordValidationFailed: string;
    passwordUpdateError: string;
    currentPasswordIncorrect: string;
    passwordUpdateSuccess: string;
    additionalInformation: string;
    memberSince: string;
    dateOfBirth: string;
  };
  userManagement: {
    userDeleted: string;
    userUpdated: string;
    userAdded: string;
    title: string;
    addUser: string;
    seeAllUsers: string;
    importUsers: string;
    searchEmail: string;
    allUsers: string;
    actions: string;
    deleteUser: string;
    deleteConfirm: string;
    importSection: string;
    userList: string;
    students: string;
    teachers: string;
    companies: string;
    administrators: string;
    name: string;
    email: string;
    role: string;
    import: string;
    refresh: string;
    selectedFile: string;
    results: string;
    showing: string;
    of: string;
    noResults: string;
    loading: string;
    selectCSV: string;
    importSuccess: string;
    importError: string;
    deleteSuccess: string;
    deleteError: string;
    selectRole: string;
    chooseFile: string;
    noFileChosen: string;
  };
  studentProject: {
    myPFEProject: string;
    submitPFEProject: string;
    submitProgressReport: string;
    projectDetails: string;
    supervisor: string;
    coSupervisor: string;
    partner: string;
    technicalDetails: string;
    technologies: string;
    hardwareRequirements: string;
    projectStatus: string;
    nextReview: string;
    progressReports: string;
    pfeProjects: string;
    proposeNewProject: string;
    selectionList: string;
    myProposals: string;
    myProjectProposals: string;
    clearAll: string;
    noActiveProject: string;
    browseAvailableProjects: string;
    proposeProject: string;
    myProjectSelectionList: string;
    type: string;
    description: string;
    selectProject: string;
    selected: string;
    acceptProject: string;
    submitted: string;
    clearAllTesting: string;
    hide: string;
    show: string;
    projectsProposed: string;
    browseOrPropose: string;
    pending: string;
    underReview: string;
  };
  emailConfig: {
    title: string;
    newPeriod: string;
    fillTestData: string;
    emailPeriods: string;
    target: string;
    configure: string;
    startDate: string;
    reminders: string;
    closingDate: string;
    emailTemplates: string;
    scheduled: string;
    initialTemplate: string;
    reminderTemplate: string;
    closingTemplate: string;
    statusActive: string;
    statusPending: string;
    editPeriod: string;
    periodName: string;
    targetAudience: string;
    teachers: string;
    students: string;
    companies: string;
    allUsers: string;
    availableVariables: string;
    templateBody: string;
    subject: string;
    cancel: string;
    saveChanges: string;
    maxReminders: string;
    addReminder: string;
  };
}
